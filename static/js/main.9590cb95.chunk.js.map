{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","goods","sortedGoods","sort","good1","good2","localeCompare","length","reverse","setSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAyB,iBACzBC,EAAiB,eA2BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA7BR,SAAwBA,EAAxB,GAA0D,IAAzBJ,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UACpCG,EAAW,YAAOD,GAiBxB,OAfIJ,GACFK,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,EACKG,EAAYM,UAGdN,EAOOO,CAAejB,EAAiB,CAAEK,YAAWE,cAO3D,OACE,qBAAKW,UAAU,kBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,IAAcJ,IAE5BoB,QAAS,kBAAMf,EAAaL,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,IAAcH,IAE5BmB,QAAS,kBAAMf,EAAaJ,IAL9B,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAab,IAClDc,QAAS,kBAAMb,GAAcD,IAH/B,sBAQEF,GAAaE,IACf,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAxCM,WACZb,GAAa,GACbF,EAAa,KAmCT,mBASA,6BACGG,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAoBA,eCjGhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9590cb95.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABETICALLY = 'sortByAlphabet';\nconst SORT_BY_LENGTH = 'sortByLength';\n\nfunction setSortedGoods(goods, { sortField, isReverse }) {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    return sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const goods = setSortedGoods(goodsFromServer, { sortField, isReverse });\n\n  const reset = () => {\n    setIsReverse(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_BY_ALPHABETICALLY,\n          })}\n          onClick={() => setSortField(SORT_BY_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReverse })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        )}\n\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}